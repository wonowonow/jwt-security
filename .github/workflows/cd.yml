name: cd

on:
  push:
    branches: [ "main" ] # main 브랜치로 merge 시 작동

env:
  AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
  AWS_EC2_USERNAME: ${{ secrets.AWS_EC2_USERNAME }}
  AWS_EC2_SSH_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  DEPLOY_POSTGRES_DB: ${{ secrets.DEPLOY_POSTGRES_DB }}
  DEPLOY_POSTGRES_USER: ${{ secrets.DEPLOY_POSTGRES_USER }}
  DEPLOY_POSTGRES_PASSWORD: ${{ secrets.DEPLOY_POSTGRES_PASSWORD }}
  DEPLOY_REDIS_PASSWORD: ${{ secrets.DEPLOY_REDIS_PASSWORD }}
  JWT_SECRET_FOR_DEPLOY: ${{ secrets.JWT_SECRET_FOR_DEPLOY }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build -x test --warning-mode=all

      # Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      # Docker 이미지 빌드
      - name: Build Docker images
        run: |
          docker build -t ${{ env.DOCKER_HUB_USERNAME }}/jwt-security:latest \
            --build-arg FILE_DIRECTORY=/ -f ./Dockerfile .

      # Docker Hub에 이미지 푸시
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_HUB_USERNAME }}/jwt-security:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write

    steps:
      - uses: actions/checkout@v4
      - name: scp docker-compose file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.AWS_EC2_HOST }}
          username: ${{ env.AWS_EC2_USERNAME }}
          key: ${{ env.AWS_EC2_SSH_KEY }}
          source: "docker-compose-deploy.yml"
          target: "~/"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.AWS_EC2_HOST }}
          username: ${{ env.AWS_EC2_USERNAME }}
          key: ${{ env.AWS_EC2_SSH_KEY }}
          script: |
            echo ${{ env.DOCKER_HUB_TOKEN }} | docker login -u ${{ env.DOCKER_HUB_USERNAME }} --password-stdin
            docker pull ${{ env.DOCKER_HUB_USERNAME }}/jwt-security:latest
            docker-compose -f ./docker-compose-deploy.yml down
            docker-compose -f ./docker-compose-deploy.yml up -d